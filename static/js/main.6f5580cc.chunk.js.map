{"version":3,"sources":["components/NavBar.js","components/overview/OverviewTab.js","util/action_constants.js","components/fundraising/FundraisingTab.js","util/naming_constants.js","components/settings/PartyNameField.js","components/settings/SettingsTab.js","App.js","serviceWorker.js","index.js"],"names":["NavBar","className","this","props","tabList","map","tabName","cssClass","activeTab","key","onClick","tabSwapFn","Component","OverviewTab","displayStyle","style","display","partyName","oppositionPartyName","CANVASING_ACTION","FundraisingTab","state","actionMessage","begForMoney","bind","setState","Math","floor","random","length","manualMoneyClick","displayActionMessage","availableFunds","type","title","POLITICAL_PREFIX","POLITICAL_PARTY_NAME","PartyNameField","fieldVal","handleValueChange","handleReset","handleSave","handleRandom","event","newVal","target","value","saveFn","saveWhenFinished","firstPrefix","firstName","secondPrefix","secondName","firstNameSeed","firstPrefixSeed","round","secondNameSeed","secondPrefixSeed","finalName","prevProps","prevState","onChange","maxLength","width","fontFamily","padding","SettingsTab","updatePartyName","updateOppositionPartyName","App","tabPopulateFn","targetTabName","newTabList","includes","filter","tab","pop","push","nameString","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"oQA2BeA,E,iLAxBJ,IAAD,OACR,OACC,yBAAKC,UAAU,uBAEbC,KAAKC,MAAMC,QAAQC,KAAI,SAACC,GAEvB,IAAMC,EAAW,sCAEfD,IAAY,EAAKH,MAAMK,UACpB,cACA,IAGL,OACC,0BAAMP,UAAYM,EAAWE,IAAMH,EAAU,UAAYI,QAAS,kBAAM,EAAKP,MAAMQ,UAAUL,KAC1FA,W,GAhBWM,aCeNC,E,iLAbb,IAAMC,EAAwC,aAAzBZ,KAAKC,MAAMK,UAA2B,QAAU,OAErE,OACC,yBAAKP,UAAU,QAAQc,MAAO,CAAEC,QAASF,IACxC,6EAEA,kCAAQZ,KAAKC,MAAMc,UAAnB,uBAEA,kCAAQf,KAAKC,MAAMe,oBAAnB,gC,GAVsBN,aCFbO,EAAmB,CAC/B,sDACA,sCACA,wFACA,0DACA,4GCqCcC,E,YAtCd,aAAc,IAAD,8BACZ,+CAGKC,MAAQ,CACZC,cAAe,IAIhB,EAAKC,YAAc,EAAKA,YAAYC,KAAjB,gBATP,E,2EAaZtB,KAAKuB,SAAS,CACbH,cAAeH,EAAiBO,KAAKC,MAAMD,KAAKE,SAAWT,EAAiBU,UAC1E3B,KAAKC,MAAM2B,oB,+BAId,IAAMhB,EAAwC,gBAAzBZ,KAAKC,MAAMK,UAA8B,QAAU,OAElEuB,EAAuB7B,KAAKmB,MAAMC,cAAgB,2BAAIpB,KAAKmB,MAAMC,eAAqB,KAE5F,OACC,yBAAKrB,UAAU,QAAQc,MAAO,CAAEC,QAASF,IACtCiB,EACF,wCAAc7B,KAAKC,MAAM6B,eAAzB,kBACA,4BACCtB,QAASR,KAAKqB,YACdU,KAAK,SACLC,MAAM,gDAHP,6B,GA5ByBtB,aCHhBuB,EAAmB,CAC/B,UACA,UACA,WACA,OACA,OACA,YACA,WACA,eACA,cACA,kBACA,iBACA,YACA,SACA,OACA,WACA,UACA,QACA,eACA,aACA,YACA,QACA,WACA,OACA,QACA,OACA,WACA,SACA,UACA,YACA,OACA,cACA,gBACA,oBACA,UACA,SACA,gBACA,kBACA,UACA,UACA,eACA,QACA,QACA,QACA,YACA,aACA,WACA,YACA,UACA,YACA,aACA,eACA,gBACA,aACA,iBACA,SACA,UACA,OACA,UACA,UACA,SACA,SACA,YACA,SACA,UACA,cACA,gBACA,iBACA,QACA,UACA,QACA,QACA,YACA,cACA,eACA,UACA,YACA,SACA,WACA,UACA,SAGYC,EAAuB,CACnC,YACA,aACA,aACA,aACA,YACA,UACA,cACA,WACA,gBACA,cACA,aACA,WACA,cACA,WACA,iBACA,aACA,cACA,aACA,cACA,cACA,aACA,UACA,aACA,cACA,aACA,aACA,WACA,WACA,gBACA,cACA,cACA,YACA,WACA,eACA,eACA,aACA,cACA,cACA,SACA,aACA,cACA,eACA,YACA,YACA,eACA,kBACA,UACA,YACA,YACA,aACA,kBACA,cACA,aACA,cACA,cACA,YACA,WACA,WACA,cACA,gBACA,cACA,WACA,aACA,aACA,QACA,UACA,WACA,UACA,cACA,oBACA,aACA,gBACA,OACA,aCfcC,E,YA1Id,aAAc,IAAD,8BACZ,+CAGKhB,MAAQ,CACZiB,SAAU,IAIX,EAAKC,kBAAoB,EAAKA,kBAAkBf,KAAvB,gBACzB,EAAKgB,YAAc,EAAKA,YAAYhB,KAAjB,gBACnB,EAAKiB,WAAa,EAAKA,WAAWjB,KAAhB,gBAClB,EAAKkB,aAAe,EAAKA,aAAalB,KAAlB,gBAZR,E,+EAgBKmB,GACjB,IAAIC,EAASD,EAAME,OAAOC,MAE1B5C,KAAKuB,SAAS,CACba,SAAUM,M,oCAMX1C,KAAKuB,SAAS,CACba,SAAUpC,KAAKC,MAAM2C,U,mCAMM,OAAxB5C,KAAKmB,MAAMiB,UAA6C,KAAxBpC,KAAKmB,MAAMiB,UAC9CpC,KAAKC,MAAM4C,OAAO7C,KAAKmB,MAAMiB,Y,qCAKO,IAAD,OAAxBU,EAAwB,wDAChCC,EAAc,GACdC,EAAY,GACZC,EAAe,GACfC,EAAa,GAEbC,EAAgB3B,KAAKC,MAAMD,KAAKE,SAAWQ,EAAqBP,QACpEqB,EAAYd,EAAqBiB,GAEjC,IAAIC,EAAkB5B,KAAK6B,MAAM7B,KAAKE,SAAWO,EAAiBN,OAAS,GACvEyB,EAAkBnB,EAAiBN,SACtCoB,EAAcd,EAAiBmB,IAGh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","file":"static/js/main.6f5580cc.chunk.js","sourcesContent":["import React, { Component }  from 'react';\r\n\r\nclass NavBar extends Component {\r\n\trender() {\t\t\r\n\t\treturn (\r\n\t\t\t<div className='file-folder-nav-bar' >\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.props.tabList.map((tabName) => {\r\n\t\t\t\t\t\t// Is this the active tab?\r\n\t\t\t\t\t\tconst cssClass = 'file-folder-background nav-bar-tab' + \r\n\t\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\t\ttabName === this.props.activeTab\r\n\t\t\t\t\t\t\t\t\t? ' active-tab'\r\n\t\t\t\t\t\t\t\t\t: ''\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<span className={ cssClass } key={ tabName + '-header' } onClick={() => this.props.tabSwapFn(tabName)} >\r\n\t\t\t\t\t\t\t\t{ tabName }\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\nexport default NavBar;\r\n","import React, { Component } from 'react';\n\nclass OverviewTab extends Component {\n\trender() {\n\t\tconst displayStyle = this.props.activeTab === 'Overview' ? 'block' : 'none';\n\n\t\treturn (\n\t\t\t<div className='paper' style={{ display: displayStyle }}>\n\t\t\t\t<p>You haven't done anything noteworthy, citizen.</p>\n\n\t\t\t\t<p>The {this.props.partyName} Party is just you.</p>\n\n\t\t\t\t<p>The {this.props.oppositionPartyName} Party rules unopposed.</p>\n\t\t\t</div>\n\t\t);\n\t}\n};\nexport default OverviewTab;\n","export const CANVASING_ACTION = [\n\t'You approach strangers on the street for donations.',\n\t'You beg your sister for a donation.',\n\t'After a dozen doors slammed in your face, somebody finally throws money at you first.',\n\t'You find some cash stuffed between your couch cushions.',\n\t'During a break in canvassing, an old lady mistakes you for a beggar and gives you a little money. Score!'\n];\n","import React, { Component } from 'react';\nimport { CANVASING_ACTION } from '../../util/action_constants';\n\nclass FundraisingTab extends Component {\n\tconstructor(){\n\t\tsuper();\n\t\t\n\t\t// Default state values\n\t\tthis.state = {\n\t\t\tactionMessage: ''\n\t\t};\n\t\t\n\t\t// Function bindings\n\t\tthis.begForMoney = this.begForMoney.bind(this);\n\t}\n\t\n\tbegForMoney() {\n\t\tthis.setState({\n\t\t\tactionMessage: CANVASING_ACTION[Math.floor(Math.random() * CANVASING_ACTION.length)]\n\t\t}, this.props.manualMoneyClick);\n\t}\n\t\n\trender() {\n\t\tconst displayStyle = this.props.activeTab === 'Fundraising' ? 'block' : 'none';\n\t\t\n\t\tconst displayActionMessage = this.state.actionMessage ? <p>{this.state.actionMessage}</p> : null;\n\n\t\treturn (\n\t\t\t<div className='paper' style={{ display: displayStyle }}>\n\t\t\t\t{ displayActionMessage }\n\t\t\t\t<p>You have ${this.props.availableFunds} to work with.</p>\n\t\t\t\t<button\n\t\t\t\t\tonClick={this.begForMoney}\n\t\t\t\t\ttype='button'\n\t\t\t\t\ttitle='Beg random strangers for money on the street'\n\t\t\t\t>\n\t\t\t\t\tCanvas for Donations\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t);\n\t}\n};\nexport default FundraisingTab;\n","export const POLITICAL_PREFIX = [\r\n\t'Techno-',\r\n\t'Crypto-',\r\n\t'Anarcho-',\r\n\t'Geo-',\r\n\t'Eco-',\r\n\t'Moderate ',\r\n\t'Radical ',\r\n\t'Progressive ',\r\n\t'Regressive ',\r\n\t'Constitutional ',\r\n\t'Revolutionary ',\r\n\t'Agrarian ',\r\n\t'Socio-',\r\n\t'Neo-',\r\n\t'Popular ',\r\n\t'United ',\r\n\t'Anti-',\r\n\t'Independent ',\r\n\t'Patriotic ',\r\n\t'Colonial ',\r\n\t'Xeno-',\r\n\t'Deutero-',\r\n\t'Pan-',\r\n\t'Post-',\r\n\t'Alt-',\r\n\t'Counter-',\r\n\t'Ethno-',\r\n\t'Ergato-',\r\n\t'Partheno-',\r\n\t'Sub-',\r\n\t'Fundibular ',\r\n\t'Ecclesiastic ',\r\n\t'Right And Proper ',\r\n\t'Pseudo-',\r\n\t'Paleo-',\r\n\t'Provisionary ',\r\n\t'Dispensational ',\r\n\t'Feudal ',\r\n\t'Tribal ',\r\n\t'Directorial ',\r\n\t'Free ',\r\n\t'Semi-',\r\n\t'Demi-',\r\n\t'Regional ',\r\n\t'Syncretic ',\r\n\t'Agnatic ',\r\n\t'Cognatic ',\r\n\t'Enatic ',\r\n\t'Elective ',\r\n\t'Bourgeois ',\r\n\t'Proletarian ',\r\n\t'Deliberative ',\r\n\t'Geriatric ',\r\n\t'International ',\r\n\t'Green ',\r\n\t'Orange ',\r\n\t'Red ',\r\n\t'Yellow ',\r\n\t'Golden ',\r\n\t'Vegan ',\r\n\t'Trans-',\r\n\t'Hegelian ',\r\n\t'Ultra-',\r\n\t'Syndic ',\r\n\t'Tripartite ',\r\n\t'Cosmopolitan ',\r\n\t'Collaborative ',\r\n\t'Open ',\r\n\t'Heroic ',\r\n\t'Para-',\r\n\t'Proto',\r\n\t'Clerical ',\r\n\t'Analytical ',\r\n\t'Mythopoetic ',\r\n\t'Fiscal ',\r\n\t'Integral ',\r\n\t'Alter-',\r\n\t'Gestalt ',\r\n\t'Global ',\r\n\t'Omni-'\r\n];\r\n\r\nexport const POLITICAL_PARTY_NAME = [\r\n\t'Socialist',\r\n\t'Democratic',\r\n\t'Republican',\r\n\t'Monarchist',\r\n\t'Communist',\r\n\t'Fascist',\r\n\t'Libertarian',\r\n\t'Unionist',\r\n\t'Particularist',\r\n\t'Nationalist',\r\n\t'Separatist',\r\n\t'Centrist',\r\n\t'Imperialist',\r\n\t'Populist',\r\n\t'Traditionalist',\r\n\t'Spartacist',\r\n\t'Confederate',\r\n\t'Federalist',\r\n\t'Survivalist',\r\n\t'Dominionist',\r\n\t'Heritagist',\r\n\t'Marxist',\r\n\t'Trotskyist',\r\n\t'Immortalist',\r\n\t'Bolshevist',\r\n\t'Menshevist',\r\n\t'Pacifist',\r\n\t'Loyalist',\r\n\t'Legislaturist',\r\n\t'Rationalist',\r\n\t'Originalist',\r\n\t'Reformist',\r\n\t'Nativist',\r\n\t'Expansionist',\r\n\t'Abolitionist',\r\n\t'Capitalist',\r\n\t'Corporatist',\r\n\t'Materialist',\r\n\t'Egoist',\r\n\t'Absolutist',\r\n\t'Consumerist',\r\n\t'Situationist',\r\n\t'Dogmatist',\r\n\t'Libertine',\r\n\t'Isolationist',\r\n\t'Accelerationist',\r\n\t'Statist',\r\n\t'Extremist',\r\n\t'Hegemonic',\r\n\t'Demarchist',\r\n\t'Parliamentarian',\r\n\t'Geniocratic',\r\n\t'Timocratic',\r\n\t'Platformist',\r\n\t'Primitivist',\r\n\t'Specifist',\r\n\t'Humanist',\r\n\t'Leninist',\r\n\t'Vanguardist',\r\n\t'Authoritarian',\r\n\t'Irridentist',\r\n\t'Optimate',\r\n\t'Legitimist',\r\n\t'Promethian',\r\n\t'Gaian',\r\n\t'Luddite',\r\n\t'Feminist',\r\n\t'Agonist',\r\n\t'Ochlocratic',\r\n\t'Reconstructionist',\r\n\t'Revivalist',\r\n\t'Abstentionist',\r\n\t'Punk',\r\n\t'Extropian'\r\n];","import React, { Component } from 'react';\r\nimport {POLITICAL_PREFIX, POLITICAL_PARTY_NAME} from '../../util/naming_constants';\r\n\r\nclass PartyNameField extends Component {\r\n\tconstructor(){\r\n\t\tsuper();\r\n\t\t\r\n\t\t// Default state values\r\n\t\tthis.state = {\r\n\t\t\tfieldVal: ''\r\n\t\t};\r\n\t\t\r\n\t\t// Function bindings\r\n\t\tthis.handleValueChange = this.handleValueChange.bind(this);\r\n\t\tthis.handleReset = this.handleReset.bind(this);\r\n\t\tthis.handleSave = this.handleSave.bind(this);\r\n\t\tthis.handleRandom = this.handleRandom.bind(this);\r\n\t}\r\n\t\r\n\t// Update state on user change\r\n\thandleValueChange(event) {\r\n\t\tlet newVal = event.target.value;\r\n\t\t\r\n\t\tthis.setState({\r\n\t\t\tfieldVal: newVal\r\n\t\t});\r\n\t}\r\n\t\r\n\t// Set the fieldVal to the value prop\r\n\thandleReset() {\r\n\t\tthis.setState({\r\n\t\t\tfieldVal: this.props.value\r\n\t\t});\r\n\t}\r\n\t\r\n\t// Submit new value to parent if it's acceptable\r\n\thandleSave() {\r\n\t\tif (this.state.fieldVal !== null && this.state.fieldVal !== '') {\r\n\t\t\tthis.props.saveFn(this.state.fieldVal);\r\n\t\t}\r\n\t}\r\n\t\r\n\t// Create a new party name from the values in the naming_constants file \r\n\thandleRandom(saveWhenFinished=false) {\r\n\t\tlet firstPrefix = '';\r\n\t\tlet firstName = '';\r\n\t\tlet secondPrefix = '';\r\n\t\tlet secondName = '';\r\n\t\t\r\n\t\tlet firstNameSeed = Math.floor(Math.random() * POLITICAL_PARTY_NAME.length); // Note the floor; This is the only mandatory piece\r\n\t\tfirstName = POLITICAL_PARTY_NAME[firstNameSeed];\r\n\t\t\r\n\t\tlet firstPrefixSeed = Math.round(Math.random() * POLITICAL_PREFIX.length * 2);\r\n\t\tif (firstPrefixSeed < POLITICAL_PREFIX.length) {\r\n\t\t\tfirstPrefix = POLITICAL_PREFIX[firstPrefixSeed];\r\n\t\t}\r\n\t\t\r\n\t\tlet secondNameSeed = Math.round(Math.random() * POLITICAL_PARTY_NAME.length * 3);\r\n\t\tif (secondNameSeed < POLITICAL_PARTY_NAME.length && secondNameSeed !== firstNameSeed) {\r\n\t\t\tsecondName = POLITICAL_PARTY_NAME[secondNameSeed];\r\n\t\t}\r\n\t\t\r\n\t\tlet secondPrefixSeed = Math.round(Math.random() * POLITICAL_PREFIX.length * 3);\r\n\t\tif (secondPrefixSeed < POLITICAL_PREFIX.length && secondPrefixSeed !== firstPrefixSeed && secondName !== '') {\r\n\t\t\tsecondPrefix = POLITICAL_PREFIX[secondPrefixSeed];\r\n\t\t}\r\n\t\t\r\n\t\tlet finalName = firstPrefix + firstName + \r\n\t\t\t(\r\n\t\t\t\tsecondName !== ''\r\n\t\t\t\t\t? ' ' + secondPrefix + secondName\r\n\t\t\t\t\t: ''\r\n\t\t\t);\r\n\t\t\r\n\t\tthis.setState({\r\n\t\t\tfieldVal: finalName\r\n\t\t}, () => {\r\n\t\t\tif (saveWhenFinished) {\r\n\t\t\t\tthis.handleSave();\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\t\r\n\t// Initial pageview\r\n\tcomponentDidMount() {\r\n\t\tif (this.props.value) {\r\n\t\t\tthis.setState({\r\n\t\t\t\tfieldVal: this.props.value\r\n\t\t\t});\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.handleRandom(true);\r\n\t\t}\r\n\t}\r\n\t\r\n\t// Subsequent pageviews (if applicable)\r\n\tcomponentDidUpdate(prevProps, prevState) {\r\n\t\tif (prevProps.value !== this.props.value) {\r\n\t\t\tthis.setState({\r\n\t\t\t\tfieldVal: this.props.value\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\t\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<label>{this.props.title}: </label>\r\n\t\t\t\t<br />\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype='text'\r\n\t\t\t\t\tvalue={this.state.fieldVal}\r\n\t\t\t\t\tonChange={this.handleValueChange}\r\n\t\t\t\t\tmaxLength={100}\r\n\t\t\t\t\tstyle={{ \r\n\t\t\t\t\t\twidth: this.state.fieldVal.length + 'ch', \r\n\t\t\t\t\t\tfontFamily: 'Lucida Sans Typewriter, Courier New, monospace', \r\n\t\t\t\t\t\tpadding: '2px 1em' \r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t\t<button\r\n\t\t\t\t\tonClick={this.handleReset}\r\n\t\t\t\t\ttype='button'\r\n\t\t\t\t>\r\n\t\t\t\t\tReset\r\n\t\t\t\t</button>\r\n\t\t\t\t<button\r\n\t\t\t\t\tonClick={() => this.handleRandom(false)}\r\n\t\t\t\t\ttype='button'\r\n\t\t\t\t>\r\n\t\t\t\t\tRandom\r\n\t\t\t\t</button>\r\n\t\t\t\t<button\r\n\t\t\t\t\tonClick={this.handleSave}\r\n\t\t\t\t\ttype='button'\r\n\t\t\t\t>\r\n\t\t\t\t\tSave\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\nexport default PartyNameField;\r\n","import React, { Component } from 'react';\nimport PartyNameField from './PartyNameField';\n\nclass SettingsTab extends Component {\n\trender() {\n\t\tconst displayStyle = this.props.activeTab === 'Settings' ? 'block' : 'none';\n\n\t\treturn (\n\t\t\t<div className='paper' style={{ display: displayStyle }}>\n\t\t\t\t<PartyNameField\n\t\t\t\t\ttitle='Party Name'\n\t\t\t\t\tvalue={this.props.partyName}\n\t\t\t\t\tsaveFn={this.props.updatePartyName}\n\t\t\t\t/>\n\t\t\t\t<PartyNameField\n\t\t\t\t\ttitle='Opposition Party Name'\n\t\t\t\t\tvalue={this.props.oppositionPartyName}\n\t\t\t\t\tsaveFn={this.props.updateOppositionPartyName}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n};\nexport default SettingsTab;\n","import React, { Component } from 'react';\nimport NavBar from './components/NavBar';\nimport OverviewTab from './components/overview/OverviewTab.js';\nimport FundraisingTab from './components/fundraising/FundraisingTab.js';\nimport SettingsTab from './components/settings/SettingsTab.js';\nimport './App.css';\n\n// Top level component for the application\nclass App extends Component {\n\tconstructor(){\n\t\tsuper();\n\t\t\n\t\t// Default state values\n\t\tthis.state = {\n\t\t\tactiveTab: 'Overview',\n\t\t\ttabList: ['Overview', 'Settings'],\n\t\t\tpartyName: '',\n\t\t\toppositionPartyName: '',\n\t\t\tavailableFunds: 20\n\t\t};\n\t\t\n\t\t// Function bindings\n\t\tthis.tabSwapFn = this.tabSwapFn.bind(this);\n\t\tthis.tabPopulateFn = this.tabPopulateFn.bind(this);\n\t\tthis.updatePartyName = this.updatePartyName.bind(this);\n\t\tthis.updateOppositionPartyName = this.updateOppositionPartyName.bind(this);\n\t\tthis.manualMoneyClick = this.manualMoneyClick.bind(this);\n\t}\n\t\n\t// Swaps active tab to the selected argument\n\ttabSwapFn(targetTabName) {\n\t\tif (targetTabName && targetTabName.length && targetTabName !== this.state.activeTab) {\n\t\t\tthis.setState({\n\t\t\t\tactiveTab: targetTabName\n\t\t\t});\n\t\t}\n\t}\n\t\n\t// Insert or delete tab to the navbar\n\ttabPopulateFn(tabName) {\n\t\tif (tabName) {\n\t\t\tlet newTabList = this.state.tabList;\n\t\t\tif (this.state.tabList.includes(tabName)) {\n\t\t\t\tnewTabList = newTabList.filter((tab) => tab !== tabName);\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// I want settings to always be in the back, so we're gonna juggle a little\n\t\t\t\tnewTabList.pop();\n\t\t\t\tnewTabList.push(tabName);\n\t\t\t\tnewTabList.push('Settings');\n\t\t\t}\n\t\t\tthis.setState({\n\t\t\t\ttabList: newTabList\n\t\t\t});\n\t\t}\n\t}\n\t\n\tupdatePartyName(nameString) {\n\t\tif (nameString !== null && nameString.length) {\n\t\t\tthis.setState({\n\t\t\t\tpartyName: nameString\n\t\t\t});\n\t\t}\n\t}\n\t\n\tupdateOppositionPartyName(nameString) {\n\t\tif (nameString !== null && nameString.length) {\n\t\t\tthis.setState({\n\t\t\t\toppositionPartyName: nameString\n\t\t\t});\n\t\t}\n\t}\n\n\tmanualMoneyClick() {\n\t\tthis.setState((prevState) => {\n\t\t\treturn {\n\t\t\t\tavailableFunds: prevState.availableFunds + Math.round(Math.random() * 10)\n\t\t\t};\n\t\t});\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.tabPopulateFn('Fundraising');\n\t}\n\t\n\trender() {\n\t\treturn (\n\t\t\t<div className='App'>\n\t\t\t\t<header className='right-aligned-text app-name' >\n\t\t\t\t\t<span className='header-text-blue'>Political</span> <span className='header-text-red'>Clicker</span>\n\t\t\t\t</header>\n\t\t\t\t<NavBar activeTab={this.state.activeTab} tabSwapFn={this.tabSwapFn} tabList={this.state.tabList} />\n\t\t\t\t<div className='file-folder-background file-folder-body'>\n\t\t\t\t\t<OverviewTab\n\t\t\t\t\t\tactiveTab={this.state.activeTab}\n\t\t\t\t\t\tpartyName={this.state.partyName}\n\t\t\t\t\t\toppositionPartyName={this.state.oppositionPartyName}\n\t\t\t\t\t/>\n\t\t\t\t\t<FundraisingTab\n\t\t\t\t\t\tactiveTab={this.state.activeTab}\n\t\t\t\t\t\tavailableFunds={this.state.availableFunds}\n\t\t\t\t\t\tmanualMoneyClick={this.manualMoneyClick}\n\t\t\t\t\t/>\n\t\t\t\t\t<SettingsTab\n\t\t\t\t\t\tactiveTab={this.state.activeTab}\n\t\t\t\t\t\tpartyName={this.state.partyName}\n\t\t\t\t\t\toppositionPartyName={this.state.oppositionPartyName}\n\t\t\t\t\t\tupdatePartyName={this.updatePartyName}\n\t\t\t\t\t\tupdateOppositionPartyName={this.updateOppositionPartyName}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}